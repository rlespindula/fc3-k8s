apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 1
  template:
    metadata:
      labels:
        app: goserver
    spec:
      containers:
        - name: goserver
          image: "rogervv/hello-go:v5"

          # readiness  (tira o tráfego da aplicação)
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080        # porta do container
            periodSeconds: 3
            failureThreshold: 1      # faz 3 verificações dos 3 segundos para reiniciar o container
            initialDelaySeconds: 10  # espera 10 segundos para iniciar o readiness

          # liveness (recria o processo)
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080        # porta do container
            periodSeconds: 5
            failureThreshold: 1     # faz 3 verificações dos 5 segundos para reiniciar o container
            timeoutSeconds: 1
            successThreshold: 1     # faz 3 verificações de timeout de 1 segundo
            initialDelaySeconds: 15  # espera 10 segundos para iniciar o liveness

          envFrom:
            - configMapRef:
                name: goserver-env
            - secretRef:
                name: goserver-secret

          # monta o volume
          volumeMounts:
            - mountPath: "/go/languages"
              name: config

      # cria o volume para injetar o configmap na aplicação
      volumes:
        - name: config
          configMap:
            name: configmap-languages
            items:
            - key: languages
              path: "languages.txt"